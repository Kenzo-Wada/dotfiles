return {
  -- "nvim-lualine/lualine.nvim",
  -- event = "VeryLazy",
  -- dependencies = { "echasnovski/mini.icons" },
  -- config = function()
  --   local colors = require("cyberdream.colors").default
  --
  --   local copilot_colors = {
  --     [""] = { fg = colors.grey, bg = colors.none },
  --     ["Normal"] = { fg = colors.grey, bg = colors.none },
  --     ["Warning"] = { fg = colors.red, bg = colors.none },
  --     ["InProgress"] = { fg = colors.yellow, bg = colors.none },
  --   }
  --
  --   local filetype_map = {
  --     lazy = { name = "lazy.nvim", icon = "üí§" },
  --     minifiles = { name = "minifiles", icon = "üóÇÔ∏è " },
  --     snacks_terminal = { name = "terminal", icon = "üêö" },
  --     mason = { name = "mason", icon = "üî®" },
  --     TelescopePrompt = { name = "telescope", icon = "üîç" },
  --     ["copilot-chat"] = { name = "copilot", icon = "ü§ñ" },
  --   }
  --
  --   require("lualine").setup({
  --     options = {
  --       component_separators = { left = " ", right = " " },
  --       section_separators = { left = " ", right = " " },
  --       theme = "auto",
  --       globalstatus = true,
  --       disabled_filetypes = { statusline = { "dashboard", "alpha" } },
  --     },
  --     sections = {
  --       lualine_a = {
  --         {
  --           "mode",
  --           icon = "ÓöÆ",
  --           fmt = function(mode)
  --             return mode:lower()
  --           end,
  --         },
  --       },
  --       lualine_b = { { "branch", icon = "Ôëø" } },
  --       lualine_c = {
  --         {
  --           "diagnostics",
  --           symbols = {
  --             error = "Ó™á ",
  --             warn = "Ó©¨ ",
  --             info = "Ó©¥ ",
  --             hint = "Û∞ù∂ ",
  --           },
  --         },
  --         {
  --           "filetype",
  --           icon_only = true,
  --           separator = "",
  --           padding = { left = 1, right = 0 },
  --           fmt = function(str)
  --             local ft = vim.bo.filetype
  --             if filetype_map[ft] then
  --               return filetype_map[ft].icon
  --             end
  --             return str
  --           end,
  --         },
  --         {
  --           "filename",
  --           symbols = { modified = "  ", readonly = "", unnamed = "" },
  --           fmt = function(name)
  --             if filetype_map[vim.bo.filetype] then
  --               return filetype_map[vim.bo.filetype].name
  --             else
  --               return name
  --             end
  --           end,
  --         },
  --         {
  --           function()
  --             return require("nvim-navic").get_location()
  --           end,
  --           cond = function()
  --             return package.loaded["nvim-navic"] and require("nvim-navic").is_available()
  --           end,
  --           color = { fg = colors.grey, bg = colors.none },
  --         },
  --       },
  --       lualine_x = {
  --         {
  --           require("lazy.status").updates,
  --           cond = require("lazy.status").has_updates,
  --           color = { fg = colors.green },
  --         },
  --         {
  --           function()
  --             local icon = "ÔÑì "
  --             local status = require("copilot.api").status.data
  --             return icon .. (status.message or "")
  --           end,
  --           cond = function()
  --             local ok, clients = pcall(vim.lsp.get_clients, { name = "copilot", bufnr = 0 })
  --             return ok and #clients > 0
  --           end,
  --           color = function()
  --             if not package.loaded["copilot"] then
  --               return
  --             end
  --             local status = require("copilot.api").status.data
  --             return copilot_colors[status.status] or copilot_colors[""]
  --           end,
  --         },
  --         { "diff" },
  --       },
  --       lualine_y = {
  --         {
  --           "progress",
  --         },
  --         {
  --           "location",
  --           color = { fg = colors.cyan, bg = colors.none },
  --         },
  --       },
  --       lualine_z = {
  --         function()
  --           return "Ôê∫ " .. os.date("%X") .. " üöÄ "
  --         end,
  --       },
  --     },
  --     extensions = { "lazy", "toggleterm", "mason", "neo-tree", "trouble" },
  --   })
  -- end,
}
